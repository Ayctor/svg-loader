{"remainingRequest":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/khalid/projects/sites/svg-loader/src/svg-loader.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/khalid/projects/sites/svg-loader/src/svg-loader.vue","mtime":1600091134916},{"path":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICAgIG5hbWU6ICdTVkdMb2FkZXInLAogICAgcHJvcHM6IFsnc3JjJywgJ2NsYXNzTGlzdCddLAogICAgbW91bnRlZCgpIHsKICAgICAgICB0aGlzLnNldENvbnRlbnQoKTsKICAgIH0sCiAgICBtZXRob2RzOiB7CiAgICAgICAgc2V0Q29udGVudCgpIHsKICAgICAgICAgICAgaWYgKHRoaXMuY2xhc3NMaXN0ICYmIHRoaXMuY2xhc3NMaXN0ICE9PSAnJykgewogICAgICAgICAgICAgICAgY29uc3QgY2xhc3NMaXN0QXJyYXkgPSB0aGlzLmNsYXNzTGlzdC5zcGxpdCgnICcpOwogICAgICAgICAgICAgICAgaWYgKGNsYXNzTGlzdEFycmF5ICYmIGNsYXNzTGlzdEFycmF5Lmxlbmd0aCA+IDApIHsKICAgICAgICAgICAgICAgICAgICBjbGFzc0xpc3RBcnJheS5mb3JFYWNoKGVsZW1lbnQgPT4gewogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLiRlbC5jbGFzc0xpc3QuYWRkKGVsZW1lbnQpOwogICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgfSwKICAgIH0sCiAgICB3YXRjaDogewogICAgICAgIHNyYygpIHsKICAgICAgICAgICAgdGhpcy5zZXRDb250ZW50KCk7CiAgICAgICAgfSwKICAgIH0sCn07Cg=="},{"version":3,"sources":["svg-loader.vue"],"names":[],"mappings":";;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"svg-loader.vue","sourceRoot":"src","sourcesContent":["<template>\n    <svg role=\"img\"><use :xlink:href=\"src\" /></svg>\n</template>\n\n<script>\nexport default {\n    name: 'SVGLoader',\n    props: ['src', 'classList'],\n    mounted() {\n        this.setContent();\n    },\n    methods: {\n        setContent() {\n            if (this.classList && this.classList !== '') {\n                const classListArray = this.classList.split(' ');\n                if (classListArray && classListArray.length > 0) {\n                    classListArray.forEach(element => {\n                        this.$el.classList.add(element);\n                    });\n                }\n            }\n        },\n    },\n    watch: {\n        src() {\n            this.setContent();\n        },\n    },\n};\n</script>\n"]}]}